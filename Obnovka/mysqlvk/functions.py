# ENCODING WITH UTF-8

import random
import sqlite3
import mysql.connector
import yaml
import os
from datetime import datetime, timedelta
import threading
import mcrcon
import string
import time
import traceback
import requests
from Bot import *

config_path = '/root/mysqlvk/config.yml'
with open(config_path, 'r') as file:
    config = yaml.safe_load(file)

access_token = config['access_token']
logs_admin_token = config['logs_admin_token']
rcon_ranks = config['permissions']
group_id = config['group_id']
mysql_host = config['mysql_host']
mysql_user = config['mysql_user']
mysql_pass = config['mysql_pass']
mysql_server_db = config['mysql_server_db']
mysql_bot_db = config['mysql_bot_db']

def get_server_permissions(rank):
    """–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è —Ä–∞–Ω–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    return config['serv_perms'].get(rank, [])

def get_bot_allowed_ranks(bot_cmd):
    """–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–Ω–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞."""
    return config['allowed_ranks'].get(bot_cmd, [])

def get_bot_valid_ranks(valid):
    """–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–Ω–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –±–æ—Ç–µ."""
    return config['valid_ranks'].get(valid, [])
    
def get_rank_permissions(rank):
    if rank in rcon_ranks:
        allowed_commands = rcon_ranks[rank]
        if '*' in allowed_commands:
            return '*'
        return allowed_commands
    return []

def get_selected_server(selected_account):
    """–ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    try:
        cursorBot.execute("SELECT selected_server FROM vk_rcon WHERE nickname = %s", (selected_account,))
        row = cursorBot.fetchone()
        return row[0] if row else None
    except mysql.connector.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return None
    #finally:
        #cursorBot.close()
        #connBot.close()
        #pass

def select_server(server_name, user_id):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    try:
        selected_account = get_selected_account(user_id)
        cursorBot.execute("UPDATE vk_rcon SET selected_server = %s WHERE nickname = %s", (server_name, selected_account))
    except mysql.connector.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
    #finally:
        #connBot.close()
        #cursorBot.close()

def get_playtime(username):
    try:
        cursorSurvival.execute("SELECT time FROM playtime WHERE nickname = %s", (username,))
        row = cursorSurvival.fetchone()
        #connSurvival.close()

        if row:
            seconds = row[0]
            hours, remainder = divmod(seconds, 3600)
            minutes, _ = divmod(remainder, 60)
            return hours, minutes
    except mysql.connector.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –∏–≥—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}: {e}")
    return 0, 0

def get_last_session(username):
    try:
        cursorSurvival.execute("SELECT session_time FROM playtime WHERE nickname = %s", (username,))
        row = cursorSurvival.fetchone()
        #connSurvival.close()

        if row:
            seconds = row[0]
            minutes, _ = divmod(seconds, 60)
            return minutes
    except mysql.connector.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}: {e}")
    return 0

def get_last_date(username):
    try:
        cursorSurvival.execute("SELECT last_date FROM users WHERE nickname = %s", (username,))
        row = cursorSurvival.fetchone()
        
        if row and row[0]:
            # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è UNIX-–≤—Ä–µ–º–µ–Ω–∏ –≤ —Å—Ç—Ä–æ–∫—É
            dt = datetime.fromtimestamp(row[0])
            return dt.strftime("%Y-%m-%d %H:%M:%S")
        else:
            return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
    except mysql.connector.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–∞—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}: {e}")
    return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'

def generate_promo_code():
    return '-'.join([''.join(random.choices(string.ascii_uppercase, k=5)) for _ in range(3)])

def ban_player(username, ban_reason, ban_duration_hours, user_id):
    ban_time = datetime.now() + timedelta(hours=ban_duration_hours)
    ban_time_str = ban_time.strftime("%Y-%m-%d %H:%M:%S")

    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–Ω–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–∏—á–∏–Ω–æ–π, –≥–¥–µ –ø—Ä–æ–±–µ–ª—ã –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è
    cursorBot.execute("UPDATE vk_rcon SET banned = 'YES', ban_reason = %s, ban_time = %s WHERE nickname = %s", (ban_reason, ban_time_str, username))
    #connBot.close()
    #cursorBot.close()
    # –ü–æ–ª—É—á–∞–µ–º vk_id –∏–≥—Ä–æ–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    cursorBot.execute("SELECT vk_id FROM vk_rcon WHERE nickname = %s", (username,))
    row = cursorBot.fetchone()
    display_ban_reason = ban_reason.replace('_', ' ')
    if row:
        vk_id = row[0]
        # –ó–∞–º–µ–Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–π –Ω–∞ –ø—Ä–æ–±–µ–ª—ã –ø—Ä–∏ –≤—ã–≤–æ–¥–µ
        #display_ban_reason = ban_reason.replace('_', ' ')
        send_vk_message(vk_session, vk_id, f"üö´ | [id{vk_id}|{username}], –≤—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {display_ban_reason}. –†–∞–∑–±–∞–Ω —á–µ—Ä–µ–∑: {ban_duration_hours} —á–∞—Å(–æ–≤).\n üíâ | –î–æ–∫–∏: @roltoncraft_logs")

    # –ü–æ–ª—É—á–∞–µ–º –Ω–∏–∫–Ω–µ–π–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    selected_account = get_selected_account(user_id)
    cursorBot.execute("SELECT nickname FROM vk_rcon WHERE nickname = %s", (selected_account,))
    admin_row = cursorBot.fetchone()
    #connBot.close()
    admin_nick = admin_row[0] if admin_row else "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"  # –ï—Å–ª–∏ –Ω–∏–∫–Ω–µ–π–º –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    vk_user.board.createComment(
        group_id=config['logs_group_id'],  # ID –≥—Ä—É–ø–ø—ã (–±–µ–∑ –º–∏–Ω—É—Å–∞)
        topic_id=config['logs_topic_id'],
        from_group=config['from_group'],
        message=f"‚ö†Ô∏è | –ù–∞ –∏–≥—Ä–æ–∫–∞ [id{vk_id}|{username}] –Ω–∞–ª–æ–∂–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ–Ω–∞—Ç–µ—Ä—Å–∫–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–æ–Ω—Å–æ–ª–∏ –∏–≥—Ä–æ–∫–æ–º [id{user_id}|{admin_nick}].\n\n ¬ª –ü—Ä–∏—á–∏–Ω–∞: {display_ban_reason}\n ¬ª –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {ban_duration_hours} —á."
    )

def unban_player(username, user_id=None):
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursorBot.execute("UPDATE vk_rcon SET banned = 'NO', ban_reason = NULL, ban_time = NULL WHERE nickname = %s", (username,))
    #connBot.close()
    #cursorBot.close()

    # –ü–æ–ª—É—á–∞–µ–º vk_id –∏–≥—Ä–æ–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞–∑–±–∞–Ω–µ
    cursorBot.execute("SELECT vk_id FROM vk_rcon WHERE nickname = %s", (username,))
    row = cursorBot.fetchone()
    if row:
        vk_id = row[0]
        send_vk_message(vk_session, vk_id, "‚úÖ | –í—ã –±—ã–ª–∏ —Ä–∞–∑–±–∞–Ω–µ–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞.")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫—Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–∞–∑–±–∞–Ω: –±–æ—Ç –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        if user_id is None:
            admin_nick = "–°–µ—Ä–≤–µ—Ä"
            user_id = "229239390"# –ï—Å–ª–∏ —Ä–∞–∑–±–∞–Ω –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±–æ—Ç–æ–º, —É–∫–∞–∑—ã–≤–∞–µ–º "–°–µ—Ä–≤–µ—Ä–æ–º"
        else:
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∏–∫–Ω–µ–π–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ —Ä–∞–∑–±–∞–Ω–∏–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
            selected_account = get_selected_account(user_id)
            cursorBot.execute("SELECT nickname FROM vk_rcon WHERE nickname = %s", (selected_account,))
            admin_row = cursor.fetchone()
            if admin_row:
                admin_nick = admin_row[0]
            else:
                admin_nick = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"  # –ï—Å–ª–∏ –Ω–∏–∫–Ω–µ–π–º –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        vk_user.board.createComment(
            group_id=config['logs_group_id'],  # ID –≥—Ä—É–ø–ø—ã (–±–µ–∑ –º–∏–Ω—É—Å–∞)
            topic_id=config['logs_topic_id'],
            from_group = config['from_group'],
            message=f"‚ö†Ô∏è | –° –∏–≥—Ä–æ–∫–∞ [id{vk_id}|{username}] —Å–Ω—è—Ç—ã –≤—Å–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–º [id{user_id}|{admin_nick}]."
        )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
def get_username_from_message(message_text):
    try:
        _, username = message_text.split(' ', 1)
        return username.strip()
    except ValueError:
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã vk_links
def get_user_data(username):
    cursorBot.execute("SELECT vk_id, link FROM vk_links WHERE username = %s", (username,))
    user_row = cursorBot.fetchone()
    #connBot.close()
    if user_row and user_row[1] == 'YES':  # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–∏–≤—è–∑–∞–Ω
        return {'vk_id': user_row[0], 'username': username}
    return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ vk_rcon
def get_rcon_data(nickname):
    cursorBot.execute("SELECT rank, banned, ban_reason, ban_time FROM vk_rcon WHERE nickname = %s", (nickname,))
    rcon_row = cursorBot.fetchone()
    if rcon_row:
        return {
            'rank': rcon_row[0] or "–ù–µ—Ç—É",
            'banned': rcon_row[1] or "NO",
            'ban_reason': rcon_row[2] or "–ù–µ—Ç—É",
            'ban_time': rcon_row[3] or "–ù–µ—Ç—É"
        }
    return None

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
def format_player_info_message(username, vk_id, rcon_data, play_time):
    if rcon_data is None:
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ—Ç, –≤—ã–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        rank = "–ù–µ—Ç—É"
        banned = "–ù–µ—Ç—É"
        ban_reason = "–ù–µ—Ç—É"
        ban_time = "–ù–µ—Ç—É"
    else:
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å, –∏–∑–≤–ª–µ–∫–∞–µ–º –∏—Ö
        rank = rcon_data.get('rank', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        banned = rcon_data.get('banned', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        ban_reason = rcon_data.get('ban_reason', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')
        ban_time = rcon_data.get('ban_time', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    cursorBot.execute("SELECT username FROM vk_links WHERE vk_id = %s", (vk_id,))
    accounts = cursorBot.fetchall()
    accounts_list = ', '.join([account[0] for account in accounts]) if accounts else "–ù–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤"

    hours, minutes = play_time

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–∑ config.yml
    is_admin = "üëë" if vk_id in config['admins'] else ""
    is_admin_desc = "üëë - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ë–æ—Ç–∞" if vk_id in config['admins'] else ""

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    player_info_message = f"""üìù | –ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–∞ –ø–æ –Ω–∏–∫—É: {username}\n\nüî∞ | –í–ö ID: @id{vk_id} {is_admin}\nüîë | –î–æ—Å—Ç—É–ø: {rank}\nüïπ | –í—Å–µ–≥–æ –Ω–∞–∏–≥—Ä–∞–Ω–æ: {hours} —á. {minutes} –º.\n‚õìÔ∏è | –ü—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∞–∫–∫–∏: {accounts_list}\nüö´ | –ë–∞–Ω –≤ –∫–æ–Ω—Å–æ–ª–∏: \n¬ª –ó–∞–±–∞–Ω–µ–Ω: {banned}\n¬ª –ü—Ä–∏—á–∏–Ω–∞: {ban_reason}\n¬ª –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –¥–æ {ban_time} MSK\n\n{is_admin_desc}"""
    return player_info_message

def get_selected_account(vk_id):
    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Ç–∞–±–ª–∏—Ü–µ others, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–µ selected_account
        cursorBot.execute("SELECT selected_account FROM others WHERE vk_id = %s", (vk_id,))
        row = cursorBot.fetchone()

        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º selected_account
        if row:
            return row[0]
        else:
            return None

    except mysql.connector.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        #cursorBot.close()
        #connBot.close()
        pass


#===================================#
#                                   #
#     –û—Å–Ω–æ–≤–Ω–∞—è RCON —Ñ—É–Ω–∫—Ü–∏—è         #
#                                   #
#===================================#

def execute_rcon_command(user_id, vk_session, command, *args):
    try:
        selected_account = get_selected_account(user_id)
        selected_server = get_selected_server(selected_account)
        
        if not selected_account:
            send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ –≤—ã–±—Ä–∞–Ω –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.")
            return

        if not selected_server:
            send_vk_message(vk_session, user_id, "üö´ | –í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. \n ¬ª /rcon 1 [–∏–º—è —Å–µ—Ä–≤–µ—Ä–∞].")
            return

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        server_config = config['servers'].get(selected_server)
        if not server_config:
            send_vk_message(vk_session, user_id, "üö´ | –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞.")
            return

        # –°–æ–µ–¥–∏–Ω—è–µ–º—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º —á–µ—Ä–µ–∑ RCON
        full_command = f"{command} " + " ".join(args)
        with mcrcon.MCRcon(server_config['rcon_host'], server_config['rcon_password'], port=server_config['rcon_port']) as mcr:
            response = mcr.command(full_command)

        if response.strip():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –Ω–µ –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –æ–¥–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤
            send_vk_message(vk_session, user_id, f"‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä {selected_server} (by {selected_account}) :\n {response}")
        else:
            # –°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç
            send_vk_message(vk_session, user_id, f"‚úÑ1ÔøΩ7 | –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä {selected_server} (by {selected_account}) :\nüì© | —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")
    
    except Exception as e:
        send_vk_message(vk_session, user_id, f"üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã ({selected_server}): \n{str(e)}")

#===================================#
#                                   #
#    RCON —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤    #
#                                   #
#===================================#

def rcon_command(command, server_name):
    server_config = config['servers'].get(server_name)
    if not server_config:
        return None

    try:
        with mcrcon.MCRcon(server_config['rcon_host'], server_config['rcon_password'], port=server_config['rcon_port']) as mcr:
            response = mcr.command(command)
            return response
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ RCON: {e}")
        return None

#