# ENCODING WITH UTF-8
#
#TODO
# –≤–æ–∑–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å /unreport-all,/pardon-all –¥–ª—è support –¥–ª—è —Ä–∞–∑–±–∞–Ω–∞ –≤—Å–µ—Ö –ø–æ –Ω–∏–∫—É

import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
import random
import sqlite3
import mysql.connector
import yaml
import os
from datetime import datetime, timedelta
import hashlib
import threading
import mcrcon
import string
import time
import traceback
import requests

print("–†–∞–±–æ—Ç–∞–µ—Ç)")

#===================================#
#                                   #
#           –î—Ä—É–≥–æ–µ                  #
#                                   #
#===================================#

last_unlink_time = {}

#===================================#
#                                   #
#          –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è             #
#                                   #
#===================================#

config_path = '/root/mysqlvk/config.yml'
with open(config_path, 'r') as file:
    config = yaml.safe_load(file)

access_token = config['access_token']
logs_admin_token = config['logs_admin_token']
rcon_ranks = config['permissions']
group_id = config['group_id']
mysql_host = config['mysql_host']
mysql_user = config['mysql_user']
mysql_pass = config['mysql_pass']
mysql_server_db = config['mysql_server_db']
mysql_bot_db = config['mysql_bot_db']

#===================================#
#                                   #
# –ü—É—Ç–∏ –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö –∏ —Ñ–∞–π–ª–∞–º      #
#                                   #
#===================================#

vk_id_path = '/root/linux/plugins/HlebBans_src/vk_id.db'

#===================================#
#                                   #
#    –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö     #
#                                   #
#===================================#

#(–≠—Ç–æ conn i cursor)
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö bot_data
connBot = mysql.connector.connect(
    host=mysql_host,
    user=mysql_user,
    password=mysql_pass,
    database=mysql_bot_db
)
connBot.autocommit = True
cursorBot = connBot.cursor()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ vk_id (–±–∞–∑–∞ –±–∞–Ω–æ–≤)

conn_bans = sqlite3.connect(vk_id_path)
cursor_bans = conn_bans.cursor()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ promocodes
promo_conn = mysql.connector.connect(
    host=mysql_host,
    user=mysql_user,
    password=mysql_pass,
    database=mysql_bot_db
)
promo_conn.autocommit = True
promo_cursor = promo_conn.cursor()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ vkProtection

conn_protect = mysql.connector.connect(
    host=mysql_host,
    user=mysql_user,
    password=mysql_pass,
    database=mysql_server_db
)
conn_protect.autocommit = True
cursor_protect = promo_conn.cursor()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ server_db

connSurvival = mysql.connector.connect(
            host=mysql_host,
            user=mysql_user,
            password=mysql_pass,
            database=mysql_server_db
        )

connSurvival.autocommit = True
cursorSurvival = connSurvival.cursor()

#===================================#
#                                   #
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ #
#                                   #
#===================================#

cursorBot.execute('''
    CREATE TABLE IF NOT EXISTS vk_links (
        username VARCHAR(255) UNIQUE,
        vk_id BIGINT,
        vk_code VARCHAR(255),
        link VARCHAR(255) DEFAULT 'NO'
    )
''')

cursorBot.execute('''
    CREATE TABLE IF NOT EXISTS vk_rcon (
        nickname VARCHAR(255) UNIQUE,
        vk_id BIGINT,
        rank VARCHAR(50),
        banned VARCHAR(10) DEFAULT 'NO',
        ban_reason TEXT,
        ban_time DATETIME,
        selected_server VARCHAR(50)
    )
''')

cursorBot.execute('''
    CREATE TABLE IF NOT EXISTS others (
        vk_id BIGINT UNIQUE,
        last_reset_time DATETIME,
        selected_account VARCHAR(255)
    )
''')

cursorBot.execute('''
    CREATE TABLE IF NOT EXISTS settings (
        nickname VARCHAR(255),
        vk_id BIGINT NOT NULL,
        mailing VARCHAR(10) DEFAULT 'YES'
    )
''')

promo_cursor.execute('''
    CREATE TABLE IF NOT EXISTS promo (
        promo_name VARCHAR(255) PRIMARY KEY,
        promo_desc TEXT NOT NULL,
        promo_type VARCHAR(50) NOT NULL,
        promo_count INT NOT NULL,
        promo_rank VARCHAR(255),
        promo_group VARCHAR(255),
        promo_money INT DEFAULT 0
    )
''')

promo_cursor.execute('''
    CREATE TABLE IF NOT EXISTS used_promo (
        promo_name VARCHAR(255) NOT NULL,
        nickname VARCHAR(255) NOT NULL,
        PRIMARY KEY (promo_name, nickname),
        FOREIGN KEY (promo_name) REFERENCES promo(promo_name)
    )
''')

#===================================#
#                                   #
#      –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ        #
#                                   #
#===================================#

vk_session = vk_api.VkApi(token=access_token)
vk = vk_session.get_api()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LongPoll –¥–ª—è –≥—Ä—É–ø–ø
longpoll = VkBotLongPoll(vk_session, group_id)

longpoll.ts = vk_session.method("groups.getLongPollServer", {"group_id": group_id})["ts"]

#===================================#
#                                   #
# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ FallCraft  # # Logs                              # #                                   #
#===================================#

# –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–∫–µ–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
vk_session_user = vk_api.VkApi(token=logs_admin_token)
vk_user = vk_session_user.get_api()

#===================================#
#                                   #
#–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π#
#                                   #
#===================================#

def send_vk_message(vk_session, user_id, message):
    vk = vk_session.get_api()
    vk.messages.send(
        user_id=user_id,
        message=message,
        random_id=random.randint(1, 1e6)
    )

#===================================#
#                                   #
#          –§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞             #
#                                   #
#===================================#

def get_playtime(username):
    try:
        cursorSurvival.execute("SELECT time FROM playtime WHERE nickname = %s", (username,))
        row = cursorSurvival.fetchone()
        #connSurvival.close()

        if row:
            seconds = row[0]
            hours, remainder = divmod(seconds, 3600)
            minutes, _ = divmod(remainder, 60)
            return hours, minutes
    except mysql.connector.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –∏–≥—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}: {e}")
    return 0, 0

def get_last_session(username):
    try:
        cursorSurvival.execute("SELECT session_time FROM playtime WHERE nickname = %s", (username,))
        row = cursorSurvival.fetchone()
        #connSurvival.close()

        if row:
            seconds = row[0]
            minutes, _ = divmod(seconds, 60)
            return minutes
    except mysql.connector.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}: {e}")
    return 0

def get_last_date(username):
    try:
        cursorSurvival.execute("SELECT last_date FROM users WHERE nickname = %s", (username,))
        row = cursorSurvival.fetchone()
        
        if row and row[0]:
            # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è UNIX-–≤—Ä–µ–º–µ–Ω–∏ –≤ —Å—Ç—Ä–æ–∫—É
            dt = datetime.fromtimestamp(row[0])
            return dt.strftime("%Y-%m-%d %H:%M:%S")
        else:
            return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
    except mysql.connector.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–∞—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}: {e}")
    return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'

def generate_promo_code():
    return '-'.join([''.join(random.choices(string.ascii_uppercase, k=5)) for _ in range(3)])

def hash_password(new_password):
    
    new_password_bytes = new_password.encode('utf-8')
    
    sha512_hash = hashlib.sha512()
    
    sha512_hash.update(new_password_bytes)
    
    hashed_password = sha512_hash.hexdigest()
    
    return hashed_password
    
#===================================#
#                                   #
#     –û—Å–Ω–æ–≤–Ω–∞—è RCON —Ñ—É–Ω–∫—Ü–∏—è         #
#                                   #
#===================================#

def execute_rcon_command(user_id, vk_session, command, *args):
    try:
        selected_account = get_selected_account(user_id)
        selected_server = get_selected_server(selected_account)
        
        if not selected_account:
            send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ –≤—ã–±—Ä–∞–Ω –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.")
            return

        if not selected_server:
            send_vk_message(vk_session, user_id, "üö´ | –í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. \n ¬ª /rcon –≤—ã–±—Ä–∞—Ç—å [–∏–º—è —Å–µ—Ä–≤–µ—Ä–∞].")
            return

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        server_config = config['servers'].get(selected_server)
        if not server_config:
            send_vk_message(vk_session, user_id, "üö´ | –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞.")
            return

        # –°–æ–µ–¥–∏–Ω—è–µ–º—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º —á–µ—Ä–µ–∑ RCON
        full_command = f"{command} " + " ".join(args)
        with mcrcon.MCRcon(server_config['rcon_host'], server_config['rcon_password'], port=server_config['rcon_port']) as mcr:
            response = mcr.command(full_command)

        if response.strip():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –Ω–µ –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –æ–¥–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤
            send_vk_message(vk_session, user_id, f"‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä {selected_server} (by {selected_account}) :\n {response}")
        else:
            # –°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç
            send_vk_message(vk_session, user_id, f"‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä {selected_server} (by {selected_account}) :\nüì© | —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")
    
    except Exception as e:
        send_vk_message(vk_session, user_id, f"üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã ({selected_server}): \n{str(e)}")

#===================================#
#                                   #
#    RCON —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤    #
#                                   #
#===================================#


def rcon_command(command, server_name):
    server_config = config['servers'].get(server_name)
    if not server_config:
        return None

    try:
        with mcrcon.MCRcon(server_config['rcon_host'], server_config['rcon_password'], port=server_config['rcon_port']) as mcr:
            response = mcr.command(command)
            return response
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ RCON: {e}")
        return None

######

def get_rank_permissions(rank):
    if rank in rcon_ranks:
        allowed_commands = rcon_ranks[rank]
        if '*' in allowed_commands:
            return '*'
        return allowed_commands
    return []

def get_server_permissions(rank):
    """–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è —Ä–∞–Ω–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    return config['serv_perms'].get(rank, [])

def get_bot_allowed_ranks(bot_cmd):
    """–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–Ω–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞."""
    return config['allowed_ranks'].get(bot_cmd, [])

def get_bot_valid_ranks(valid):
    """–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–Ω–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –±–æ—Ç–µ."""
    return config['valid_ranks'].get(valid, [])

def get_selected_server(selected_account):
    """–ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    try:
        cursorBot.execute("SELECT selected_server FROM vk_rcon WHERE nickname = %s", (selected_account,))
        row = cursorBot.fetchone()
        return row[0] if row else None
    except mysql.connector.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return None
    #finally:
        #cursorBot.close()
        #connBot.close()
        #pass

def select_server(server_name, user_id):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    try:
        selected_account = get_selected_account(user_id)
        cursorBot.execute("UPDATE vk_rcon SET selected_server = %s WHERE nickname = %s", (server_name, selected_account))
    except mysql.connector.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
    #finally:
        #connBot.close()
        #cursorBot.close()

def ban_player(username, ban_reason, ban_duration_hours, user_id):
    ban_time = datetime.now() + timedelta(hours=ban_duration_hours)
    ban_time_str = ban_time.strftime("%Y-%m-%d %H:%M:%S")

    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–Ω–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–∏—á–∏–Ω–æ–π, –≥–¥–µ –ø—Ä–æ–±–µ–ª—ã –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è
    cursorBot.execute("UPDATE vk_rcon SET banned = 'YES', ban_reason = %s, ban_time = %s WHERE nickname = %s", (ban_reason, ban_time_str, username))
    #connBot.close()
    #cursorBot.close()
    # –ü–æ–ª—É—á–∞–µ–º vk_id –∏–≥—Ä–æ–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    cursorBot.execute("SELECT vk_id FROM vk_rcon WHERE nickname = %s", (username,))
    row = cursorBot.fetchone()
    display_ban_reason = ban_reason.replace('_', ' ')
    if row:
        vk_id = row[0]
        # –ó–∞–º–µ–Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–π –Ω–∞ –ø—Ä–æ–±–µ–ª—ã –ø—Ä–∏ –≤—ã–≤–æ–¥–µ
        #display_ban_reason = ban_reason.replace('_', ' ')
        send_vk_message(vk_session, vk_id, f"üö´ | [id{vk_id}|{username}], –≤—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {display_ban_reason}. –†–∞–∑–±–∞–Ω —á–µ—Ä–µ–∑: {ban_duration_hours} —á–∞—Å(–æ–≤).\n üíâ | –î–æ–∫–∏: @roltoncraft_logs")

    # –ü–æ–ª—É—á–∞–µ–º –Ω–∏–∫–Ω–µ–π–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    selected_account = get_selected_account(user_id)
    cursorBot.execute("SELECT nickname FROM vk_rcon WHERE nickname = %s", (selected_account,))
    admin_row = cursorBot.fetchone()
    #connBot.close()
    admin_nick = admin_row[0] if admin_row else "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"  # –ï—Å–ª–∏ –Ω–∏–∫–Ω–µ–π–º –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    vk_user.board.createComment(
        group_id=config['logs_group_id'],  # ID –≥—Ä—É–ø–ø—ã (–±–µ–∑ –º–∏–Ω—É—Å–∞)
        topic_id=config['logs_topic_id'],
        from_group=config['from_group'],
        message=f"‚ö†Ô∏è | –ù–∞ –∏–≥—Ä–æ–∫–∞ [id{vk_id}|{username}] –Ω–∞–ª–æ–∂–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ–Ω–∞—Ç–µ—Ä—Å–∫–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–æ–Ω—Å–æ–ª–∏ –∏–≥—Ä–æ–∫–æ–º [id{user_id}|{admin_nick}].\n\n ¬ª –ü—Ä–∏—á–∏–Ω–∞: {display_ban_reason}\n ¬ª –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {ban_duration_hours} —á."
    )

def unban_player(username, user_id=None):
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursorBot.execute("UPDATE vk_rcon SET banned = 'NO', ban_reason = NULL, ban_time = NULL WHERE nickname = %s", (username,))
    #connBot.close()
    #cursorBot.close()

    # –ü–æ–ª—É—á–∞–µ–º vk_id –∏–≥—Ä–æ–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–∞–∑–±–∞–Ω–µ
    cursorBot.execute("SELECT vk_id FROM vk_rcon WHERE nickname = %s", (username,))
    row = cursorBot.fetchone()
    if row:
        vk_id = row[0]
        send_vk_message(vk_session, vk_id, "‚úÖ | –í—ã –±—ã–ª–∏ —Ä–∞–∑–±–∞–Ω–µ–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞.")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫—Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–∞–∑–±–∞–Ω: –±–æ—Ç –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        if user_id is None:
            admin_nick = "–°–µ—Ä–≤–µ—Ä"
            user_id = "229239390"# –ï—Å–ª–∏ —Ä–∞–∑–±–∞–Ω –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±–æ—Ç–æ–º, —É–∫–∞–∑—ã–≤–∞–µ–º "–°–µ—Ä–≤–µ—Ä–æ–º"
        else:
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∏–∫–Ω–µ–π–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ —Ä–∞–∑–±–∞–Ω–∏–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
            selected_account = get_selected_account(user_id)
            cursorBot.execute("SELECT nickname FROM vk_rcon WHERE nickname = %s", (selected_account,))
            admin_row = cursor.fetchone()
            if admin_row:
                admin_nick = admin_row[0]
            else:
                admin_nick = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"  # –ï—Å–ª–∏ –Ω–∏–∫–Ω–µ–π–º –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        vk_user.board.createComment(
            group_id=config['logs_group_id'],  # ID –≥—Ä—É–ø–ø—ã (–±–µ–∑ –º–∏–Ω—É—Å–∞)
            topic_id=config['logs_topic_id'],
            from_group = config['from_group'],
            message=f"‚ö†Ô∏è | –° –∏–≥—Ä–æ–∫–∞ [id{vk_id}|{username}] —Å–Ω—è—Ç—ã –≤—Å–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–º [id{user_id}|{admin_nick}]."
        )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
def get_username_from_message(message_text):
    try:
        _, username = message_text.split(' ', 1)
        return username.strip()
    except ValueError:
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã vk_links
def get_user_data(username):
    cursorBot.execute("SELECT vk_id, link FROM vk_links WHERE username = %s", (username,))
    user_row = cursorBot.fetchone()
    #connBot.close()
    if user_row and user_row[1] == 'YES':  # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–∏–≤—è–∑–∞–Ω
        return {'vk_id': user_row[0], 'username': username}
    return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ vk_rcon
def get_rcon_data(nickname):
    cursorBot.execute("SELECT rank, banned, ban_reason, ban_time FROM vk_rcon WHERE nickname = %s", (nickname,))
    rcon_row = cursorBot.fetchone()
    if rcon_row:
        return {
            'rank': rcon_row[0] or "–ù–µ—Ç—É",
            'banned': rcon_row[1] or "NO",
            'ban_reason': rcon_row[2] or "–ù–µ—Ç—É",
            'ban_time': rcon_row[3] or "–ù–µ—Ç—É"
        }
    return None

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
def format_player_info_message(username, vk_id, rcon_data, play_time):
    if rcon_data is None:
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ—Ç, –≤—ã–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        rank = "–ù–µ—Ç—É"
        banned = "–ù–µ—Ç—É"
        ban_reason = "–ù–µ—Ç—É"
        ban_time = "–ù–µ—Ç—É"
    else:
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å, –∏–∑–≤–ª–µ–∫–∞–µ–º –∏—Ö
        rank = rcon_data.get('rank', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        banned = rcon_data.get('banned', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        ban_reason = rcon_data.get('ban_reason', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')
        ban_time = rcon_data.get('ban_time', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    cursorBot.execute("SELECT username FROM vk_links WHERE vk_id = %s", (vk_id,))
    accounts = cursorBot.fetchall()
    accounts_list = ', '.join([account[0] for account in accounts]) if accounts else "–ù–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤"

    hours, minutes = play_time

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–∑ config.yml
    is_admin = "–î–∞" if vk_id in config['admins'] else "–ù–µ—Ç"

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    player_info_message = f"""üìù | –ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–∞ –ø–æ –Ω–∏–∫—É: {username}\n\nüî∞ | –í–ö ID: @id{vk_id}\nüîë | –î–æ—Å—Ç—É–ø: {rank}\nüïπ | –í—Å–µ–≥–æ –Ω–∞–∏–≥—Ä–∞–Ω–æ: {hours} —á. {minutes} –º.\n‚õìÔ∏è | –ü—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∞–∫–∫–∏: {accounts_list}\nüö´ | –ë–∞–Ω –≤ –∫–æ–Ω—Å–æ–ª–∏: \n¬ª –ó–∞–±–∞–Ω–µ–Ω: {banned}\n¬ª –ü—Ä–∏—á–∏–Ω–∞: {ban_reason}\n¬ª –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –¥–æ {ban_time} MSK\nüëë | –í—ã—à.–∞–¥–º–∏–Ω: {is_admin}"""
    return player_info_message

def get_selected_account(vk_id):
    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Ç–∞–±–ª–∏—Ü–µ others, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–µ selected_account
        cursorBot.execute("SELECT selected_account FROM others WHERE vk_id = %s", (vk_id,))
        row = cursorBot.fetchone()

        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º selected_account
        if row:
            return row[0]
        else:
            return None

    except mysql.connector.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        #cursorBot.close()
        #connBot.close()
        pass

#===================================#
#                                   #
#    –û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥    #
#                                   #
#===================================#

def run_bot():
    try:
        bot_start_time = time.time()
        
        for event in longpoll.listen():
            if event.type == VkBotEventType.MESSAGE_NEW:
                message_date = event.obj.message['date']
                if message_date < bot_start_time:
                    continue
                user_id = event.obj.message['from_id']
                peer_id = event.obj.message['peer_id']
                message_text = event.obj.message['text'].strip()
                message_id = event.obj.message['conversation_message_id']

                if message_text.startswith('/–ø—Ä–∏–≤—è–∑–∞—Ç—å'):
                    if user_id in last_unlink_time:
                        elapsed_time = time.time() - last_unlink_time[user_id]
                        if elapsed_time < 1800:  # 30 –º–∏–Ω—É—Ç
                            remaining_time = 30 - (elapsed_time // 60)
                            send_vk_message(vk_session, user_id, f"üö´ | –ß—Ç–æ–± —Å–Ω–æ–≤–∞ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å {remaining_time} –º–∏–Ω—É—Ç.")
                            continue

                    try:
                        _, data = message_text.split(' ', 1)
                        username, vk_code = data.split(' ')
                    except ValueError:
                        send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /–ø—Ä–∏–≤—è–∑–∞—Ç—å [–Ω–∏–∫] [–∫–æ–¥].")
                        continue

                    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –¥–∞–Ω–Ω—ã—Ö
                    if len(username) > 20 or len(vk_code) > 11:
                        send_vk_message(vk_session, user_id, "üö´ | –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∏–∫ –∏ –∫–æ–¥.")
                        continue

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
                    try:
                        cursorBot.execute("SELECT COUNT(*) FROM vk_links WHERE vk_id = %s", (user_id,))
                        account_count = cursorBot.fetchone()[0]
                    except mysql.connector.Error as e:
                        send_vk_message(vk_session, user_id, "üö´ | –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                        print(f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
                        continue

                    max_accounts = 5 if user_id in config['admins'] else 3

                    if account_count >= max_accounts:
                        send_vk_message(vk_session, user_id, f"üö´ | –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ ({max_accounts}).")
                        continue

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø—Ä–∏–≤—è–∑–∞–Ω –ª–∏ –Ω–∏–∫–Ω–µ–π–º
                    cursorBot.execute("SELECT * FROM vk_links WHERE username = %s AND vk_id IS NOT NULL", (username,))
                    if cursorBot.fetchone():
                        send_vk_message(vk_session, user_id, f"üö´ | –ê–∫–∫–∞—É–Ω—Ç {username} —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –¥—Ä—É–≥–æ–º—É –ø—Ä–æ—Ñ–∏–ª—é!")
                        continue

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
                    cursorBot.execute("SELECT * FROM vk_links WHERE username = %s AND vk_code = %s", (username, vk_code))
                    if cursorBot.fetchone():
                        cursor_bans.execute("INSERT INTO users (username, vk_id) VALUES (?, ?)", (username, user_id))
                        conn_bans.close()

                        cursorBot.execute("UPDATE vk_links SET vk_id = %s, link = 'YES' WHERE username = %s AND vk_code = %s", (user_id, username, vk_code))
                        #connBot.close()
                        
                        send_vk_message(vk_session, user_id, f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–ª–∏ –∞–∫–∫–∞—É–Ω—Ç '{username}'!\n\nüîí –¢–µ–ø–µ—Ä—å –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞—â–∏—â–µ–Ω.")
                    else:
                        send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–∏–∫ –∏–ª–∏ –∫–æ–¥. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ.")

                elif message_text == '/–æ—Ç–≤—è–∑–∞—Ç—å':
                    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é
                    selected_account = get_selected_account(user_id)

                    if selected_account:
                        cursorBot.execute("SELECT * FROM vk_links WHERE vk_id = %s AND username = %s", (user_id, selected_account))
                        if cursorBot.fetchone():
                            send_vk_message(vk_session, user_id, f"üò® | –ß—Ç–æ–±—ã –æ—Ç–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç {selected_account}, –≤—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ\n\n‚úèÔ∏è | –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç '–ü–û–î–¢–í–ï–†–ñ–î–ê–Æ' –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏\n\n‚ùóÔ∏è –í–Ω–∏–º–∞–Ω–∏–µ, –¥–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–æ–±—Ä–∞—Ç–∏–º—ã–º! –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞, –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–≤—è–∑–∞—Ç—å –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç\n(p.s –∞ —Ç–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Å–æ–ª–∏)")
                            
                            # –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                            confirmation_received = False
                            for confirmation_event in longpoll.listen():
                                if confirmation_event.type == VkBotEventType.MESSAGE_NEW and confirmation_event.obj.message['from_id'] == user_id:
                                    if confirmation_event.obj.message['text'].strip() == '–ü–û–î–¢–í–ï–†–ñ–î–ê–Æ':
                                        cursorBot.execute("DELETE FROM vk_links WHERE vk_id = %s AND username = %s", (user_id, selected_account))
                                        # –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ vk_rcon
                                        cursorBot.execute("DELETE FROM vk_rcon WHERE vk_id = %s AND nickname = %s", (user_id, selected_account))
                                        #connBot.close()
                                        cursor_bans.execute("DELETE FROM users WHERE vk_id = ? AND username = ?", (user_id, selected_account))
                                        conn_bans.close()
                                        send_vk_message(vk_session, user_id, f"üò® | –ê–∫–∫–∞—É–Ω—Ç {selected_account} —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤—è–∑–∞–Ω –æ—Ç –≤–∫.")
                                        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤—è–∑–∫–∏
                                        last_unlink_time[user_id] = time.time()
                                        confirmation_received = True
                                        break
                                    else:
                                        send_vk_message(vk_session, user_id, "‚úÖ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–≤—è–∑–∫–∏.")
                                        confirmation_received = True
                                        break
                        else:
                            send_vk_message(vk_session, user_id, f"üö´ | –ê–∫–∫–∞—É–Ω—Ç {selected_account} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                    else:
                        send_vk_message(vk_session, user_id, "üö´ | –í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –æ—Ç–≤—è–∑–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /–∞–∫–∫ 2 [–Ω–æ–º–µ—Ä –∞–∫–∫–∞].")

                elif message_text == '–ø–æ–º–æ—â—å':
                    help_message = (
                        "üì∞ | –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                        "‚ù§ | /–ø—Ä–∏–≤—è–∑–∞—Ç—å [–Ω–∏–∫] [–∫–æ–¥] - –ü—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç.\n"
                        "üíî | /–æ—Ç–≤—è–∑–∞—Ç—å - –û—Ç–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç.\n"
                        "üéó | /–∞–∫–∫ [–∞—Ä–≥—É–º–µ–Ω—Ç—ã] - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏.\n ¬ª 1 - –≤—Å–µ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã.\n ¬ª 2 - –≤—ã–±–æ—Ä –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º.\n ¬ª 3 - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.\n ¬ª 4 [–Ω–æ–≤—ã–π_–ø–∞—Ä–æ–ª—å](/–∞–∫–∫ 4 –ø–∞—Å—Å) - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è.\n"
                        "üì© | /rcon - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å Rcon –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä.\n¬ª 1 - –ø–æ–∫–∞–∂–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞.\n¬ª 2 - –≤—ã–±–æ—Ä –Ω—É–∂–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.\n"
                        "‚öôÔ∏è | /–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞.\n"
                        "üéÅ | /–ø—Ä–æ–º–æ –∞–∫—Ç–∏–≤–∞—Ü–∏—è [–ø—Ä–æ–º–æ] [—Å–µ—Ä–≤–µ—Ä] - –∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –≤ –±–æ—Ç–µ.\n"
                        "üì∞ | –ø–æ–º–æ—â—å - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥"
                    )
                    send_vk_message(vk_session, user_id, help_message)
                if message_text == '–ø–æ–º–æ—â—å –∞–¥–º–∏–Ω':
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–Ω–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ vk_rcon
                    selected_account = get_selected_account(user_id)
                    bot_cmd = "admin_help"
                    cursorBot.execute("SELECT rank FROM vk_rcon WHERE nickname = %s", (selected_account,))
                    row = cursorBot.fetchone()

                    if row:
                        user_rank = row[0]  # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–∞–Ω–≥ –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞

                        # –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Ä–∞–Ω–≥–æ–≤
                        allowed_ranks = get_bot_allowed_ranks(bot_cmd)

                        if user_rank in allowed_ranks:
                            # –ï—Å–ª–∏ —Ä–∞–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Ä–∞–Ω–≥–æ–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
                            admin_help_message = (
                                "üñ• | –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                                "‚õìÔ∏è | /report - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Å–æ–ª–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –µ–≥–æ –¥–æ–Ω–∞—Ç–µ—Ä—Å–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.\n"
                                "(–æ—Ç Administrator)\n"
                                "üì¶ |/—é–∑–µ—Ä-–ª–∏—Å—Ç [–Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã] - —Å–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å –¥–æ—Å—Ç—É–ø–æ–º.\n"
                                "(–æ—Ç Support)\n"
                                "üì§ | /—Ä–∞—Å—Å—ã–ª–∫–∞ - —Ä–∞–∑–æ—Å–ª–∞—Ç—å –≤—Å–µ–º –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º –∞–∫–∫–∞—É–Ω—Ç–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —á–µ–º-–ª–∏–±–æ.\n"
                                "(—Ç–æ–ª—å–∫–æ –≤—ã—à.–∞–¥–º)\n"
                                "üëë | /gp - –≤—ã–¥–∞—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–∞–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n"
                                "(—Ç–æ–ª—å–∫–æ –≤—ã—à.–∞–¥–º)\n"
                                "‚ú® | /–ø—Ä–æ–º–æ —Å–æ–∑–¥–∞—Ç—å|—Å–ø–∏—Å–æ–∫|—É–¥–∞–ª–∏—Ç—å - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏ –≤ –±–æ—Ç–µ.\n¬ª —Å–æ–∑–¥–∞—Ç—å [–¥–æ—Å—Ç—É–ø/–ø—Ä–∏–≤–∏–ª–µ–≥–∏—è] [—Ä–∞–Ω–≥/–ø—Ä–∏–≤–∞] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] [–æ–ø–∏—Å–∞–Ω–∏–µ]\n"
                                "(—Ç–æ–ª—å–∫–æ –≤—ã—à.–∞–¥–º)\n"
                                "üí† | /vk-info [–Ω–∏–∫] - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –¥–∞–Ω–Ω–æ–º –∏–≥—Ä–æ–∫–µ –≤ —Å–∏—Å—Ç–µ–º–µ.\n"
                                "(–æ—Ç Helper)"
                            )
                            send_vk_message(vk_session, user_id, admin_help_message)
                        else:
                            # –ï—Å–ª–∏ —Ä–∞–Ω–≥ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ –ø—Ä–∞–≤
                            send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥.")
                    else:
                        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ vk_rcon
                        send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥.")

                elif message_text.startswith('/gp'):
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
                    if user_id not in config['admins']:
                        send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
                        continue

                    try:
                        _, data = message_text.split(' ', 1)
                        username, rank = data.split(' ')
                    except ValueError:
                        send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.\n ¬ª /gp [–Ω–∏–∫ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ] [—Ä–∞–Ω–≥].")
                        continue

                    # –°–ø–∏—Å–æ–∫ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Ä–∞–Ω–≥–æ–≤
                    valid = "valid"
                    valid_ranks = get_bot_valid_ranks(valid)

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ä–∞–Ω–≥ –¥–æ–ø—É—Å—Ç–∏–º
                    if rank not in valid_ranks:
                        send_vk_message(vk_session, user_id, f"üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ä–∞–Ω–≥. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–Ω–≥–∏: {', '.join(valid_ranks)}.")
                        continue

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–≤—è–∑–∞–Ω –ª–∏ –Ω–∏–∫ –∫ VK ID –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ –ø—Ä–∏–≤—è–∑–∫–∞
                    cursorBot.execute("SELECT vk_id FROM vk_links WHERE username = %s AND link = 'YES'", (username,))
                    vk_id_row = cursorBot.fetchone()
                    #selected_server = get_selected_server(selected_account)

                    if vk_id_row:
                        vk_id = vk_id_row[0]
                        cursorBot.execute("REPLACE INTO vk_rcon (nickname, vk_id, rank) VALUES (%s, %s, %s)", (username, vk_id, rank))
                        #connBot.close()
                        send_vk_message(vk_session, user_id, f"‚úÖ | –†–∞–Ω–≥ {rank} —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è [id{vk_id}|{username}].")
                    else:
                        send_vk_message(vk_session, user_id, "üö´ | –ù–∏–∫ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∏–ª–∏ –ø—Ä–∏–≤—è–∑–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

                elif message_text.startswith('/rcon'):
                    try:
                        command_parts = message_text.split()
                        # –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –∫–æ–º–∞–Ω–¥–∞ /rcon –±–µ–∑ –ø–æ–¥–∫–æ–º–∞–Ω–¥
                        if len(command_parts) == 1:
                            send_vk_message(vk_session, user_id, "–®–∫–∏–±–∏–¥–∏ –¥–æ–ø –¥–æ–ø –¥–æ–ø –µ—Å –µ—Å —à–∫–∏–±–µ–¥–µ –¥–æ–ø –¥–æ–ø\nhttps://m.youtube.com/watch?v=bagAoB4o6Os&pp=ygUwZXZlcnlib2R5IHdhbnRzIHRvIHJ1bGUgdGhlIHdvcmxkIHNraWJpZGkgdG9pbGV0")
                            continue

                        # –ü–æ–¥–∫–æ–º–∞–Ω–¥–∞ /rcon –≤—ã–±—Ä–∞—Ç—å [–∏–º—è —Å–µ—Ä–≤–µ—Ä–∞]
                        if command_parts[1] == "1":
                            if len(command_parts) < 3:
                                send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /rcon 1 [–∏–º—è —Å–µ—Ä–≤–µ—Ä–∞].")
                                continue

                            server_name = command_parts[2]
                            selected_account = get_selected_account(user_id)
                            
                            if not selected_account:
                                send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ –≤—ã–±—Ä–∞–Ω –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.")
                                continue

                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—ã–±–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞
                            cursorBot.execute("SELECT rank FROM vk_rcon WHERE nickname = %s", (selected_account,))
                            result = cursorBot.fetchone()
                            if result is not None:
                                user_rank = result[0]
                            else:
                                    user_rank = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                            
                            allowed_servers = get_server_permissions(user_rank)
                            
                            
                            if server_name not in allowed_servers:
                                send_vk_message(vk_session, user_id, f"üö´ | –°–µ—Ä–≤–µ—Ä {server_name} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–∞–Ω–≥–∞.")
                            else:
                                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
                                select_server(server_name, user_id)
                                send_vk_message(vk_session, user_id, f"üñ• –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —Å–µ—Ä–≤–µ—Ä {server_name} —Å –∞–∫–∫–∞—É–Ω—Ç–∞ {selected_account}")

                        # –ü–æ–¥–∫–æ–º–∞–Ω–¥–∞ /rcon —Å–µ—Ä–≤–µ—Ä–∞
                        elif command_parts[1] == "2":
                            selected_account = get_selected_account(user_id)
                            
                            if not selected_account:
                                send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ –≤—ã–±—Ä–∞–Ω –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.")
                                continue

                            cursorBot.execute("SELECT rank FROM vk_rcon WHERE nickname = %s", (selected_account,))
                            result = cursorBot.fetchone()
                            if result is not None:
                                user_rank = result[0]
                            else:
                                user_rank = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

                            allowed_servers = get_server_permissions(user_rank)

                            if allowed_servers:
                                message = "üñ• | –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞:\n"
                                for i, server in enumerate(allowed_servers, start=1):
                                    message += f"‚ú® {i}. {server}\n"
                                send_vk_message(vk_session, user_id, message)
                            else:
                                send_vk_message(vk_session, user_id, f"üö´ | {selected_account}, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–µ—Ä–∞–º.")

                        # –ï—Å–ª–∏ —ç—Ç–æ RCON –∫–æ–º–∞–Ω–¥–∞
                        else:
                            try:
                                _, command_with_args = message_text.split(' ', 1)  # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
                                command_parts = command_with_args.split()  # –†–∞–∑–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
                                command = command_parts[0]  # –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
                                arguments = command_parts[1:]  # –û—Å—Ç–∞–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã

                                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                                cursorBot.execute("SELECT selected_account FROM others WHERE vk_id = %s", (user_id,))
                                row = cursorBot.fetchone()
                                if row and row[0]:
                                    selected_account = row[0]  # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ selected_account –∏–∑ –ë–î
                                else:
                                    send_vk_message(vk_session, user_id, "üö´ | –í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∫–æ–Ω –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /–∞–∫–∫ 2 [–Ω–æ–º–µ—Ä –∞–∫–∫–∞].")
                                    continue

                                cursorBot.execute("SELECT rank, banned, ban_reason, ban_time, nickname FROM vk_rcon WHERE vk_id = %s AND nickname = %s", (user_id, selected_account))
                                rcon_row = cursorBot.fetchone()

                                if rcon_row:
                                    rank, banned, ban_reason, ban_time, nickname = rcon_row

                                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–∞–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                                    if banned == 'YES':
                                        #remaining_time = datetime.strptime(ban_time, "%Y-%m-%d %H:%M:%S") - datetime.now()
                                        #remaining_time = datetime.strptime(str(ban_time), "%Y-%m-%d %H:%M:%S") - datetime.now()
                                        remaining_time = ban_time - datetime.now()
                                        if remaining_time.total_seconds() > 0:
                                            years, remainder = divmod(remaining_time.total_seconds(), 31536000)
                                            months, remainder = divmod(remainder, 2592000)
                                            days, remainder = divmod(remainder, 86400)
                                            hours, remainder = divmod(remainder, 3600)
                                            minutes, _ = divmod(remainder, 60)

                                            ban_duration = []
                                            if years > 0:
                                                ban_duration.append(f"{int(years)} –≥–æ–¥(–∞/–ª–µ—Ç)")
                                            if months > 0:
                                                ban_duration.append(f"{int(months)} –º–µ—Å—è—Ü(–∞/–µ–≤)")
                                            if days > 0:
                                                ban_duration.append(f"{int(days)} –¥–µ–Ω—å/–¥–Ω–µ–π")
                                            if hours > 0:
                                                ban_duration.append(f"{int(hours)} —á–∞—Å(–æ–≤)")
                                            if minutes > 0:
                                                ban_duration.append(f"{int(minutes)} –º–∏–Ω—É—Ç")

                                            remaining_time_formatted = ', '.join(ban_duration)
                                            
                                            send_vk_message(vk_session, user_id, f"üö´ | [id{user_id}|{selected_account}], –≤—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞. –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {ban_reason}. —Ä–∞–∑–±–∞–Ω —á–µ—Ä–µ–∑: {remaining_time_formatted}.\n üíâ | –î–æ–∫–∏: @roltoncraft_logs")
                                            continue
                                        else:
                                            # –ï—Å–ª–∏ –≤—Ä–µ–º—è –±–∞–Ω–∞ –∏—Å—Ç–µ–∫–ª–æ, —Ä–∞–∑–±–∞–Ω–∏–≤–∞–µ–º –∏–≥—Ä–æ–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                                            unban_player(selected_account)

                                    allowed_commands = get_rank_permissions(rank)

                                    if '*' in allowed_commands or command in allowed_commands:
                                        if command == "hban":
                                            if len(arguments) >= 3:
                                                target_nickname = arguments[0]
                                                duration = arguments[1]
                                                ban_reason = ' '.join(arguments[2:])

                                                # –î–æ–±–∞–≤–ª—è–µ–º (by {selected_account}) –≤ –∫–æ–Ω–µ—Ü –ø—Ä–∏—á–∏–Ω—ã –±–∞–Ω–∞
                                                ban_reason_with_account = f"{ban_reason} (by {selected_account})"
                                                # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –±–∞–Ω–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –ø—Ä–∏—á–∏–Ω–æ–π
                                                execute_rcon_command(user_id, vk_session, "hban", target_nickname, duration, ban_reason_with_account)
                                                #send_vk_message(user_id, message_id  f"‚õìÔ∏è | –ò–≥—Ä–æ–∫ {target_nickname} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ {duration} –º–∏–Ω—É—Ç –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {ban_reason_with_account}.")
                                            else:
                                                send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /rcon hban [–Ω–∏–∫] [–≤—Ä–µ–º—è] [–ø—Ä–∏—á–∏–Ω–∞].")
                                        elif command == "say":
                                            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º –∏ –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                                            message = ' '.join(arguments)
                                            formatted_message = f"{message} (by {nickname})"
                                            execute_rcon_command(user_id, vk_session, "say", formatted_message)
                                        elif command == "hkick":
                                            if len(arguments) >= 2:
                                                target_nickname = arguments[0]
                                                kick_reason = ' '.join(arguments[1:])

                                                # –î–æ–±–∞–≤–ª—è–µ–º (by {selected_account}) –≤ –∫–æ–Ω–µ—Ü –ø—Ä–∏—á–∏–Ω—ã –∫–∏–∫–∞
                                                kick_reason_with_account = f"{kick_reason} (by {selected_account})"

                                                # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∫–∏–∫–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –ø—Ä–∏—á–∏–Ω–æ–π
                                                execute_rcon_command(user_id, vk_session, "hkick", target_nickname, kick_reason_with_account)
                                                #send_vk_message(user_id, message_id  f"‚õìÔ∏è | –ò–≥—Ä–æ–∫ {target_nickname} –±—ã–ª –∫–∏–∫–Ω—É—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {kick_reason_with_account}.")
                                            else:
                                                send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /rcon hkick [–Ω–∏–∫] [–ø—Ä–∏—á–∏–Ω–∞].")
                                        elif command == "hmute":
                                            if len(arguments) >= 3:
                                                target_nickname = arguments[0]
                                                duration = arguments[1]
                                                mute_reason = ' '.join(arguments[2:])

                                                # –î–æ–±–∞–≤–ª—è–µ–º (by {selected_account}) –≤ –∫–æ–Ω–µ—Ü –ø—Ä–∏—á–∏–Ω—ã –º—É—Ç–∞
                                                mute_reason_with_account = f"{mute_reason} (by {selected_account})"

                                                # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –º—É—Ç–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –ø—Ä–∏—á–∏–Ω–æ–π
                                                execute_rcon_command(user_id, vk_session, "hmute", target_nickname, duration, mute_reason_with_account)
                                                #send_vk_message(user_id, message_id  f"üîá | –ò–≥—Ä–æ–∫ {target_nickname} –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ {duration} –º–∏–Ω—É—Ç –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {mute_reason_with_account}.")
                                            else:
                                                send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /rcon hmute [–Ω–∏–∫] [–≤—Ä–µ–º—è] [–ø—Ä–∏—á–∏–Ω–∞].")
                                        else:
                                            # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã RCON
                                            execute_rcon_command(user_id, vk_session ,command, *arguments)
                                    else:
                                        send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
                                else:
                                    send_vk_message(vk_session, user_id, "üö´ | –í–∞—à —Ä–∫–æ–Ω —Ä–∞–Ω–≥ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –≤—ã –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω—ã.")
                            except ValueError:
                                send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /rcon [–∫–æ–º–∞–Ω–¥–∞] [–∞—Ä–≥—É–º–µ–Ω—Ç—ã].")

                    except ValueError:
                        send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.")
                                    

                elif message_text.startswith('/—Ä–∞—Å—Å—ã–ª–∫–∞'):
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
                    if user_id in config['admins']:
                        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
                        reply_message_text = event.obj.message['text'].split('/—Ä–∞—Å—Å—ã–ª–∫–∞', 1)[-1].strip()

                        if reply_message_text:
                            # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–∞—Å—Å—ã–ª–∫–æ–π mailing = YES
                            cursorBot.execute("""
                                SELECT DISTINCT vk_links.vk_id 
                                FROM vk_links
                                JOIN settings ON vk_links.username = settings.nickname
                                WHERE vk_links.vk_id IS NOT NULL AND settings.mailing = 'YES'
                            """)
                            users = cursorBot.fetchall()

                            if users:
                                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∂–¥–æ–º—É —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                                for user in users:
                                    vk_id = user[0]
                                    send_vk_message(vk_session, vk_id, reply_message_text)

                                send_vk_message(vk_session, user_id, "‚úÖ | –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–æ–π.")
                            else:
                                send_vk_message(vk_session, user_id, "üö´ | –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–æ–π.")
                        else:
                            send_vk_message(vk_session, user_id, "üö´ | –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.")
                    else:
                        send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã.")

                elif message_text.startswith('/report'):
                    try:
                        _, data = message_text.split(' ', 1)

                        # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        selected_account = get_selected_account(user_id)

                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–±–∞–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                        cursorBot.execute("SELECT banned FROM vk_rcon WHERE nickname = %s", (selected_account,))
                        banned_status = cursorBot.fetchone()

                        if banned_status and banned_status[0] == 'YES':
                            send_vk_message(vk_session, user_id, f"üö´ | {selected_account}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, —Ç–∞–∫ –∫–∞–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏.")
                            continue

                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        cursorBot.execute("SELECT rank FROM vk_rcon WHERE nickname = %s", (selected_account,))
                        user_rank = cursorBot.fetchone()
                        bot_cmd = "report"
                        allowed_ranks = get_bot_allowed_ranks(bot_cmd)

                        if not user_rank or user_rank[0] not in allowed_ranks:
                            send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
                            continue

                        if data.startswith('-'):
                            # –†–∞–∑–±–∞–Ω –∏–≥—Ä–æ–∫–∞
                            username = data[1:]  # –£–±–∏—Ä–∞–µ–º –º–∏–Ω—É—Å –ø–µ—Ä–µ–¥ –Ω–∏–∫–æ–º

                            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∫–Ω–µ–π–º–∞ –Ω–∞ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
                            if not username.islower():
                                send_vk_message(vk_session, user_id, "üö´ | –ù–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.")
                                continue

                            cursorBot.execute("SELECT banned FROM vk_rcon WHERE nickname = %s AND rank IS NOT NULL", (username,))
                            row = cursorBot.fetchone()

                            if row:
                                banned_status = row[0]

                                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∏–≥—Ä–æ–∫ –≤ –±–∞–Ω–µ
                                if banned_status == "NO":
                                    send_vk_message(vk_session, user_id, "üö´ | –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–∞–Ω–µ.")
                                    continue

                                unban_player(username, user_id)
                                send_vk_message(vk_session, user_id, f"‚úÖ | –ò–≥—Ä–æ–∫ {username} –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω –≤ –∫–æ–Ω—Å–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞.")
                            else:
                                send_vk_message(vk_session, user_id, "üö´ | –ò–≥—Ä–æ–∫ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–æ–Ω—Å–æ–ª–∏.")
                        else:
                            # –ë–∞–Ω –∏–≥—Ä–æ–∫–∞
                            components = data.split(' ')
                            username = components[0]
                            ban_reason = '_'.join(components[1:-1])  # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —á–∞—Å—Ç–∏, –∫—Ä–æ–º–µ –Ω–∏–∫–Ω–µ–π–º–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏, —á–µ—Ä–µ–∑ "_"
                            ban_duration_str = components[-1]
                            ban_duration_hours = int(ban_duration_str)

                            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∫–Ω–µ–π–º–∞ –Ω–∞ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
                            if not username.islower():
                                send_vk_message(vk_session, user_id, "üö´ | –ù–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.")
                                continue

                            cursorBot.execute("SELECT rank FROM vk_rcon WHERE nickname = %s AND rank IS NOT NULL", (username,))
                            row = cursorBot.fetchone()

                            if row:
                                ban_player(username, ban_reason, ban_duration_hours, user_id)
                                send_vk_message(vk_session, user_id, f"üö´ | –ò–≥—Ä–æ–∫ {username} –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –∫–æ–Ω—Å–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞.")
                            else:
                                send_vk_message(vk_session, user_id, "üö´ | –ò–≥—Ä–æ–∫ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–æ–Ω—Å–æ–ª–∏.")

                    except ValueError:
                        send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /report [–Ω–∏–∫ –∏–≥—Ä–æ–∫–∞] [–ø—Ä–∏—á–∏–Ω–∞] [–≤—Ä–µ–º—è –≤ —á–∞—Å–∞—Ö].\n–∏–ª–∏ /report [-–Ω–∏–∫_–∏–≥—Ä–æ–∫–∞] –¥–ª—è —Ä–∞–∑–±–∞–Ω–∞.")

                if message_text.startswith('/–∞–∫–∫'):
                    try:
                        _, args = message_text.split(' ', 1)
                    except ValueError:
                        send_vk_message(vk_session, user_id, "üö´ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã. –í–≤–µ–¥–∏—Ç–µ /–∞–∫–∫  [ 1 - —Å–ø–∏—Å–æ–∫, 2 - –≤—ã–±—Ä–∞—Ç—å, 3 - –ø—Ä–æ—Ñ–∏–ª—å, 4 - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è]")
                        continue

                    if args == "1":
                        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        cursorBot.execute("SELECT username FROM vk_links WHERE vk_id = %s", (user_id,))
                        accounts = cursorBot.fetchall()

                        # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –∏–∑ —Ç–∞–±–ª–∏—Ü—ã others
                        selected_account = get_selected_account(user_id)

                        if accounts:
                            account_list = "\n".join([
                                f"‚ú® {i + 1}. {account[0]}{'‚úÖ' if account[0] == selected_account else ''}" 
                                for i, account in enumerate(accounts)
                            ])
                            send_vk_message(vk_session, user_id, f"üïπ | –í–∞—à–∏ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:\n{account_list}\nüì∞ | –ø–æ–º–æ—â—å - –ø–æ–º–æ—â—å")
                        else:
                            send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤.")
                    
                    elif args.startswith("2"):
                        try:
                            _, account_number = args.split(' ', 1)
                            account_number = int(account_number) - 1  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–æ–º–µ—Ä –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –∏–Ω–¥–µ–∫—Å
                        except ValueError:
                            send_vk_message(vk_session, user_id, "üö´ | –¥–ª—è –≤—ã–±–æ—Ä–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ - /–∞–∫–∫ 2 [–Ω–æ–º–µ—Ä –∞–∫–∫–∞—É–Ω—Ç–∞]")
                            continue
                        
                        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
                        cursorBot.execute("SELECT username FROM vk_links WHERE vk_id = %s", (user_id,))
                        accounts = cursorBot.fetchall()

                        if 0 <= account_number < len(accounts):
                            selected_account = accounts[account_number][0]

                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∑–∞–ø–∏—Å—å —Å –¥–∞–Ω–Ω—ã–º vk_id –≤ —Ç–∞–±–ª–∏—Ü–µ others
                            cursorBot.execute("SELECT 1 FROM others WHERE vk_id = %s", (user_id,))
                            row = cursorBot.fetchone()

                            if row:
                                # –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ selected_account
                                cursorBot.execute("UPDATE others SET selected_account = %s WHERE vk_id = %s", (selected_account, user_id))
                            else:
                                # –ï—Å–ª–∏ –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç, –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
                                cursorBot.execute("INSERT INTO others (vk_id, selected_account) VALUES (%s, %s)", (user_id, selected_account))

                            connBot.commit()
                            send_vk_message(vk_session, user_id, f"‚úÖ | –ê–∫–∫–∞—É–Ω—Ç '{selected_account}' —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π!")
                        else:
                            send_vk_message(vk_session, user_id, "üö´ | –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∞–∫–∫–∞—É–Ω—Ç–∞.")
                    
                    elif args == "3":
                        selected_account = get_selected_account(user_id)
                        
                        if selected_account:
                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ
                            cursorBot.execute("SELECT username, vk_id FROM vk_links WHERE vk_id = %s AND username = %s", (user_id, selected_account))
                            row = cursorBot.fetchone()

                            if row:
                                username, vk_id = row
                                hours, minutes = get_playtime(username)
                                last_session_minutes = get_last_session(username)
                                last_date = get_last_date(username)
                                
                                cursorSurvival.execute("SELECT last_ip, last_device, last_port FROM users WHERE nickname = %s", (username,))
                                auth_row = cursorSurvival.fetchone()
                                #connSurvival.close()

                                if auth_row:
                                    ip, device, port = auth_row
                                else:
                                    ip, device, port = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

                                cursorBot.execute("SELECT rank FROM vk_rcon WHERE nickname = %s", (selected_account,))
                                rcon_row = cursorBot.fetchone()
                                rank = rcon_row[0] if rcon_row else "–ù–µ—Ç—É"

                                send_vk_message(vk_session, user_id, f"üìú | –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∞–∫–∫–∞—É–Ω—Ç—É {username}: \n"
                                                          f"üî∞ | –í–ö ID: {vk_id}\n"
                                                          f"üëë | –î–æ—Å—Ç—É–ø: {rank}\n"
                                                          f"üïπ | –í—Å–µ–≥–æ –Ω–∞–∏–≥—Ä–∞–Ω–æ: {hours} —á. {minutes} –º.\n"
                                                          f"üïí | –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è: {last_session_minutes} –º.\n"
                                                          f"============\n"
                                                          f"üîê | –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥:\n"
                                                          f"¬ª –î–∞—Ç–∞ - {last_date} MSK\n"
                                                          f"¬ª IP - {ip}\n"
                                    
                                                          f"¬ª –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ - {device}\n"
                                                          f"¬ª –ü–æ—Ä—Ç - {port}\n"
                                                          f"============\n"
                                                          f"üì∞ | –ü–æ–º–æ—â—å - –ø–æ–º–æ—â—å")
                            else:
                                send_vk_message(vk_session, user_id, "üö´ | –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∏–ª–∏ –ø—Ä–∏–≤—è–∑–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
                        else:
                            send_vk_message(vk_session, user_id, "üö´ | –í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /–∞–∫–∫ 2 [ –Ω–æ–º–µ—Ä –∞–∫–∫–∞—É–Ω—Ç–∞ ].")
                    
                    elif args.startswith("4"):
                        selected_account = get_selected_account(user_id)

                        if selected_account:
                            try:
                                _, new_password = args.split(' ', 1)
                            except ValueError:
                                send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /–∞–∫–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å [–Ω–æ–≤—ã–π_–ø–∞—Ä–æ–ª—å].")
                                continue

                            cursorBot.execute("SELECT vk_id, username FROM vk_links WHERE vk_id = %s AND username = %s", (user_id, selected_account))
                            row = cursorBot.fetchone()

                            if row:
                                vk_id, username = row
                                cursorBot.execute("SELECT last_reset_time FROM others WHERE vk_id = %s", (vk_id,))
                                last_reset_row = cursorBot.fetchone()

                                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ last_reset_time == NULL
                                if last_reset_row is None or last_reset_row[0] is None:
                                    # –ï—Å–ª–∏ last_reset_time NULL, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Ä–µ–º–µ–Ω–∏
                                    send_vk_message(vk_session, user_id, f"üë§ | –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ '{username}'\n\nüîë | –í–∞—à –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: {new_password}\n\n‚úèÔ∏è | –î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è - –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç '–ü–û–î–¢–í–ï–†–ñ–î–ê–Æ' –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏")
                                else:
                                    last_reset_time = last_reset_row[0]
                                    current_time = datetime.now()
                                    time_diff = current_time - last_reset_time

                                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–Ω—å—à–µ —á–∞—Å–∞
                                    if time_diff < timedelta(hours=1):
                                        remaining_time = timedelta(hours=1) - time_diff
                                        minutes, seconds = divmod(remaining_time.seconds, 60)
                                        hours, minutes = divmod(minutes, 60)
                                        send_vk_message(vk_session, user_id, f"üö´ | –í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {hours} —á. {minutes} –º. –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.")
                                        continue  # –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –Ω–µ –∏—Å—Ç–µ–∫–ª–æ

                                    # –ï—Å–ª–∏ –≤—Ä–µ–º—è –ø—Ä–æ—à–ª–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Å–º–µ–Ω–æ–π –ø–∞—Ä–æ–ª—è
                                    send_vk_message(vk_session, user_id, f"üë§ | –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ '{username}'\n\nüîë | –í–∞—à –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: {new_password}\n\n‚úèÔ∏è | –î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è - –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç '–ü–û–î–¢–í–ï–†–ñ–î–ê–Æ' –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏")

                                confirmation_received = False
                                for confirmation_event in longpoll.listen():
                                    if confirmation_event.type == VkBotEventType.MESSAGE_NEW and confirmation_event.obj.message['from_id'] == user_id:
                                        if confirmation_event.obj.message['text'].strip() == '–ü–û–î–¢–í–ï–†–ñ–î–ê–Æ':
                                            #auth_conn = sqlite3.connect(auth_db_path) # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ auth.db
                                            #auth_cursor = auth_conn_bot.cursor()
                                            hashed_password = hash_password(new_password)

                                            try:
                                                cursorSurvival.execute("UPDATE users SET password = %s WHERE nickname = %s", (hashed_password, username))
                                                connSurvival.commit()
                                                send_vk_message(vk_session, user_id, f"‚úÖ | –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ '{username}'")

                                                current_time_str = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                                                cursorBot.execute("REPLACE INTO others (vk_id, last_reset_time) VALUES (%s, %s)", (vk_id, current_time_str))
                                                cursorBot.execute("UPDATE others SET selected_account = %s WHERE vk_id = %s", (selected_account, vk_id))
                                                #connBot.close()
                                            except mysql.connector.Error:
                                                send_vk_message(vk_session, user_id, "üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                                            finally:
                                                connSurvival.close()
                                            confirmation_received = True
                                            break
                                        else:
                                            send_vk_message(vk_session, user_id, "‚õî | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è.")
                                            confirmation_received = True
                                            break
                                
                                if not confirmation_received:
                                    send_vk_message(vk_session, user_id, "üö´ | –ü—Ä–æ—Ü–µ—Å—Å —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è –±—ã–ª –ø—Ä–µ—Ä–≤–∞–Ω.")
                            else:
                                send_vk_message(vk_session, user_id, "üö´ | –ê–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω.")
                        else:
                            send_vk_message(vk_session, user_id, "üö´ | –í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /–∞–∫–∫ 2 [–Ω–æ–º–µ—Ä –∞–∫–∫–∞].")
                    
                    else:
                        send_vk_message(vk_session, user_id, "üö´ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã. –í–≤–µ–¥–∏—Ç–µ /–∞–∫–∫ [ 1 - —Å–ø–∏—Å–æ–∫, 2 - –≤—ã–±—Ä–∞—Ç—å, 3 - –ø—Ä–æ—Ñ–∏–ª—å, 4 - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è]")
  
                if message_text.startswith('/vk-info'):
                    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞ –∏–∑ –∫–æ–º–∞–Ω–¥—ã
                    username = get_username_from_message(message_text)
                    if not username:
                        send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.\n ¬ª /vk-info [–Ω–∏–∫].")
                        continue

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–≤—è–∑–∞–Ω –ª–∏ –∞–∫–∫–∞—É–Ω—Ç –∫ VK ID
                    user_data = get_user_data(username)
                    if not user_data:
                        send_vk_message(vk_session, user_id, "üö´ | –ù–∏–∫–Ω–µ–π–º –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –í–ö.\n (–ø–æ–ø—Ä–æ–±—É–π –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ –Ω–∏–∫)")
                        continue

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ vk_id
                    selected_account = get_selected_account(user_id)
                    bot_cmd = "vk_info"
                    cursorBot.execute("SELECT rank FROM vk_rcon WHERE nickname = %s", (selected_account,))
                    rank_row = cursorBot.fetchone()
    
                    if not rank_row:
                        send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
                        continue

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–∞–Ω–≥ –æ–¥–Ω–æ–º—É –∏–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
                    user_rank = rank_row[0]
                    allowed_ranks = get_bot_allowed_ranks(bot_cmd)

                    if user_rank not in allowed_ranks:
                        send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
                        continue

                    # –ü–æ–ª—É—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    vk_id = user_data['vk_id']
                    nickname = get_username_from_message(message_text)
                    rcon_data = get_rcon_data(nickname)
                    play_time = get_playtime(username)

                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    player_info_message = format_player_info_message(username, vk_id, rcon_data, play_time)

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    send_vk_message(vk_session, user_id, player_info_message)

                elif message_text.startswith('/–Ω–∞—Å—Ç—Ä–æ–π–∫–∏'):
                    args = message_text.split()

                    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
                    selected_account = get_selected_account(user_id)

                    if selected_account is None:
                        send_vk_message(vk_session, user_id, "üö´ | –í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –∞–∫–∫–∞—É–Ω—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /–∞–∫–∫ 2 [–Ω–æ–º–µ—Ä].")
                        continue

                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
                    if len(args) == 3:
                        option = args[1].lower()
                        value = args[2].lower()

                        if value == '–≤–∫–ª':
                            new_value = 'YES'
                        elif value == '–≤—ã–∫–ª':
                            new_value = 'NO'
                        else:
                            send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–≤–∫–ª' –∏–ª–∏ '–≤—ã–∫–ª'.")
                            continue

                        if option == '—Ä–∞—Å—Å—ã–ª–∫–∞':
                            cursorBot.execute("UPDATE settings SET mailing = %s WHERE nickname = %s", (new_value, selected_account))
                            #connBot.close()
                            send_vk_message(vk_session, user_id, f"‚öôÔ∏è | –û–ø—Ü–∏—è '—Ä–∞—Å—Å—ã–ª–∫–∞' –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ {selected_account} —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞.")

                        elif option == '–≤—Ö–æ–¥-Hsng_fbf—ã':
                            cursorBot.execute("UPDATE settings SET join_notifications = %s WHERE nickname = %s", (new_value, selected_account))
                            #connBot.close()
                            send_vk_message(vk_session, user_id, f"‚öôÔ∏è | –û–ø—Ü–∏—è '–í—Ö–æ–¥—ã' –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ {selected_account} —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞.")

                        elif option == 'cid':
                            if value == '–≤–∫–ª':
                                send_vk_message(vk_session, user_id, f"üö´ | –û–ø—Ü–∏—è 'CID' –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω–∞ –≤ –±–æ—Ç–µ.\nüí° | —á—Ç–æ –±—ã –≤–∫–ª—é—á–∏—Ç—å –∑–∞—â–∏—Ç—É –ø–æ CID—É –∑–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø–æ–¥ –Ω–∏–∫–æ–º  {selected_account} –∏ –Ω–∞–ø–∏—à–∏—Ç–µ /2fa cid-on.")
                            elif value == '–≤—ã–∫–ª':
                                cursor_protect.execute("DELETE FROM cid WHERE player = %s", (selected_account,))
                                conn_protect.close()
                                send_vk_message(vk_session, user_id, f"‚öôÔ∏è | –û–ø—Ü–∏—è 'CID' –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ {selected_account} —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞.")
                            else:
                                send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '/–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ cid –≤—ã–∫–ª'.")

                        elif option == 'skin':
                            if value == '–≤–∫–ª':
                                send_vk_message(vk_session, user_id, f"üö´ | –û–ø—Ü–∏—è 'SKIN' –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω–∞ –≤ –±–æ—Ç–µ.\nüí° | —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –∑–∞—â–∏—Ç—É –ø–æ SKIN—É –∑–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø–æ–¥ –Ω–∏–∫–æ–º {selected_account} –∏ –Ω–∞–ø–∏—à–∏—Ç–µ /2fa skin-on.")
                            elif value == '–≤—ã–∫–ª':
                                cursor_protect.execute("DELETE FROM skin WHERE player = %s", (selected_account,))
                                conn_protect.commit()
                                send_vk_message(vk_session, user_id, f"‚öôÔ∏è | –û–ø—Ü–∏—è 'SKIN' –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ {selected_account} —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞.")
                            else:
                                send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '/–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ skin –≤—ã–∫–ª'.")

                        else:
                            send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '/–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ [–æ–ø—Ü–∏—è] [–≤–∫–ª/–≤—ã–∫–ª]' –∏–ª–∏ '/–Ω–∞—Å—Ç—Ä–æ–π–∫–∏'.")

                    # –í—ã–≤–æ–¥ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
                    elif len(args) == 1:
                        cursorBot.execute("SELECT mailing FROM settings WHERE nickname = %s", (selected_account,))
                        settings = cursorBot.fetchone()

                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞—â–∏—Ç—ã –ø–æ CID
                        cursor_protect.execute("SELECT hash FROM cid WHERE player = %s", (selected_account,))
                        cid_protection = cursor_protect.fetchone()

                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞—â–∏—Ç—ã –ø–æ SKIN
                        cursor_protect.execute("SELECT hash FROM skin WHERE player = %s", (selected_account,))
                        skin_protection = cursor_protect.fetchone()

                        if settings is None:
                            # –ï—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
                            cursorBot.execute("INSERT INTO settings (nickname, vk_id, mailing) VALUES (%s, %s, %s)", (selected_account, user_id, 'YES', 'NO'))
                            connBot.commit()
                            mailing_status = "‚úÖ"
                            #join_status = "‚õî"
                            cid_status = "‚õî"
                            skin_status = "‚õî"
                            send_vk_message(vk_session, user_id, f"‚öôÔ∏è | –î–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ {selected_account} –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.\n\nüì© | –†–∞—Å—Å—ã–ª–∫–∞: {mailing_status}\nüñ• | CID: {cid_status}\nüë§ | SKIN: {skin_status}")
                        else:
                            mailing_status = "‚úÖ" if settings[0] == 'YES' else "‚õî"
                            #join_status = "‚úÖ" if settings[1] == 'YES' else "‚õî"
                            cid_status = "‚úÖ" if cid_protection else "‚õî"
                            skin_status = "‚úÖ" if skin_protection else "‚õî"
                            send_vk_message(vk_session, user_id, f"‚öôÔ∏è | –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ {selected_account}\nüì© | –†–∞—Å—Å—ã–ª–∫–∞: {mailing_status}\nüñ• | –∑–∞—â–∏—Ç–∞ –ø–æ CID: {cid_status}\nüë§ | –∑–∞—â–∏—Ç–∞ –ø–æ SKIN: {skin_status}")

                    else:
                        send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '/–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ [–æ–ø—Ü–∏—è] [–≤–∫–ª/–≤—ã–∫–ª]' –∏–ª–∏ '/–Ω–∞—Å—Ç—Ä–æ–π–∫–∏'.")
                        
                elif message_text.startswith('/—é–∑–µ—Ä-–ª–∏—Å—Ç'):
                    try:
                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        selected_account = get_selected_account(user_id)
                        cursorBot.execute("SELECT rank FROM vk_rcon WHERE nickname = %s", (selected_account,))
                        user_rank = cursorBot.fetchone()
                        bot_cmd = "user_list"
                        allowed_ranks = get_bot_allowed_ranks(bot_cmd)

                        if not user_rank or user_rank[0] not in allowed_ranks:
                            send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
                            continue

                        # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                        _, page_str = message_text.split(' ', 1)
                        page = int(page_str) if page_str.isdigit() else 1
                        page_size = 3
                        offset = (page - 1) * page_size

                        # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
                        cursorBot.execute("SELECT COUNT(*) FROM vk_rcon")
                        total_users = cursorBot.fetchone()[0]
                        total_pages = (total_users + page_size - 1) // page_size  # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü

                        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã
                        cursorBot.execute("SELECT nickname, rank FROM vk_rcon LIMIT %s OFFSET %s", (page_size, offset))
                        users = cursorBot.fetchall()

                        if users:
                            message = "üì¶ | –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ –±–æ—Ç–µ\n"
                            for user in users:
                                nickname, rank = user
                                message += f"üë§ | –ù–∏–∫: {nickname}\nüëë | –î–æ—Å—Ç—É–ø: {rank}\n"
                                message += "------------------------------------\n"
                            message += f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page} –∏–∑ {total_pages}"
                            send_vk_message(vk_session, user_id, message)
                        else:
                            send_vk_message(vk_session, user_id, f"üö´ | –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã {page}.")
                    except ValueError:
                        send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /—é–∑–µ—Ä-–ª–∏—Å—Ç [–Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã].")

                if message_text.startswith('/–ø—Ä–æ–º–æ'):
                    args = message_text.split()
                    selected_1account = get_selected_account(user_id)

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                    is_admin = user_id in config['admins']

                    # /–ø—Ä–æ–º–æ —Å–ø–∏—Å–æ–∫ ‚Äî –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
                    if len(args) >= 2 and args[1] == '—Å–ø–∏—Å–æ–∫':
                        if not is_admin:
                            send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤.")
                            continue

                        page = int(args[2]) if len(args) > 2 else 1
                        offset = (page - 1) * 2
                        promo_cursor.execute("SELECT promo_name, promo_desc, promo_type, promo_count FROM promo LIMIT 2 OFFSET %s", (offset,))
                        promos = promo_cursor.fetchall()

                        if not promos:
                            send_vk_message(vk_session, user_id, "üì¶ | –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –Ω–∞ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.")
                        else:
                            message = "üì¶ | –í—Å–µ –ø—Ä–æ–º–æ\n\n"
                            for promo in promos:
                                promo_name, promo_desc, promo_type, promo_count = promo
                                promo_desc = promo_desc.replace('_', ' ')
                                message += f"üåü | {promo_name}\nüìù | –û–ø–∏—Å–∞–Ω–∏–µ: {promo_desc}\nüéÅ | –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {promo_type}\n‚öôÔ∏è | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {promo_count}\n\n"
                            send_vk_message(vk_session, user_id, message)
                        continue

                    # /–ø—Ä–æ–º–æ —Å–æ–∑–¥–∞—Ç—å ‚Äî –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
                    elif len(args) >= 6 and args[1] == '—Å–æ–∑–¥–∞—Ç—å':
                        if not is_admin:
                            send_vk_message(vk_session, user_id, "üö´ | –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤.")
                            continue

                        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤–≤–µ–¥–µ–Ω—ã –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
                        if len(args) < 6:
                            send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /–ø—Ä–æ–º–æ —Å–æ–∑–¥–∞—Ç—å [–¥–æ—Å—Ç—É–ø/–ø—Ä–∏–≤–∏–ª–µ–≥–∏—è] [—Ä–∞–Ω–≥/–ø—Ä–∏–≤–∏–ª–µ–≥–∏—è] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π] [–æ–ø–∏—Å–∞–Ω–∏–µ]")
                            continue

                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –∫–æ–º–∞–Ω–¥—ã
                        promo_type = args[2]
                        rank_priv = args[3]
                        promo_count = args[4]
                        promo_desc = " ".join(args[5:])  # –°–æ—Å—Ç–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ, —É—á–∏—Ç—ã–≤–∞—è –ø—Ä–æ–±–µ–ª—ã

                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
                        if not promo_count.isdigit():
                            send_vk_message(vk_session, user_id, "üö´ | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
                            continue
                        promo_count = int(promo_count)

                        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞
                        promo_name = generate_promo_code()

                        # –ó–∞–º–µ–Ω—è–µ–º –ø—Ä–æ–±–µ–ª—ã –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î
                        promo_desc = promo_desc.replace(' ', '_')

                        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                        if promo_type == '–¥–æ—Å—Ç—É–ø':
                            promo_cursor.execute("INSERT INTO promo (promo_name, promo_desc, promo_type, promo_rank, promo_count) VALUES (%s, %s, %s, %s, %s)",
                                                 (promo_name, promo_desc, promo_type, rank_priv, promo_count))
                        elif promo_type == '–ø—Ä–∏–≤–∏–ª–µ–≥–∏—è':
                            promo_cursor.execute("INSERT INTO promo (promo_name, promo_desc, promo_type, promo_group, promo_count) VALUES (%s, %s, %s, %s, %s)",
                                                 (promo_name, promo_desc, promo_type, rank_priv, promo_count))
 
                        elif promo_type == '–¥–µ–Ω—å–≥–∏':
                            promo_cursor.execute("INSERT INTO promo (promo_name, promo_desc, promo_type, promo_money, promo_count) VALUES (%s, %s, %s, %s, %s)",
                                                 (promo_name, promo_desc, promo_type, rank_priv, promo_count))
                        else:
                            send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞. –î–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ '–¥–æ—Å—Ç—É–ø' –∏ '–ø—Ä–∏–≤–∏–ª–µ–≥–∏—è' –∏ '–¥–µ–Ω—å–≥–∏' .")
                            continue

                        promo_conn.commit()
                        send_vk_message(vk_session, user_id, f"‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ '{promo_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
                        continue

                    # /–ø—Ä–æ–º–æ –∞–∫—Ç–∏–≤–∞—Ü–∏—è
                    elif len(args) >= 3 and args[1] == '–∞–∫—Ç–∏–≤–∞—Ü–∏—è':
                        promo_code = args[2]
                        server_name = args[3] if len(args) > 3 else None

                        promo_cursor.execute("SELECT promo_desc, promo_type, promo_count, promo_rank, promo_group, promo_money FROM promo WHERE promo_name = %s", (promo_code,))
                        promo = promo_cursor.fetchone()

                        if not promo:
                            send_vk_message(vk_session, user_id, "üö´ | –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –≤–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω–æ.")
                            continue

                        promo_desc, promo_type, promo_count, promo_rank, promo_group, promo_money = promo
                        selected_account = get_selected_account(user_id)

                        if not selected_account:
                            send_vk_message(vk_session, user_id, "üö´ | –ü—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                            continue

                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ —Ä–∞–Ω–µ–µ
                        promo_cursor.execute("SELECT * FROM used_promo WHERE promo_name = %s AND nickname = %s", (promo_code, selected_account))
                        if promo_cursor.fetchone():
                            send_vk_message(vk_session, user_id, "üö´ | –í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥.")
                            continue

                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∞–∫—Ç–∏–≤–∞—Ü–∏–π
                        if promo_count <= 0:
                            send_vk_message(vk_session, user_id, "üö´ | –≠—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω.")
                            continue

                        # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                        if promo_type == '–¥–æ—Å—Ç—É–ø':
                            cursorBot.execute("SELECT rank FROM vk_rcon WHERE nickname = %s", (selected_account,))
                            user_rank = cursorBot.fetchone()[0]
                            if user_rank < promo_rank:
                                cursorBot.execute("UPDATE vk_rcon SET rank = %s WHERE nickname = %s", (promo_rank, selected_account))
                                connBot.commit()
                                send_vk_message(vk_session, user_id, f"üì¶ | –ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ –∞–∫–∫–µ {selected_account}!\nüåü | –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–º–æ: {promo_desc.replace('_', ' ')}\nüëë | –î–æ—Å—Ç—É–ø –ø–æ–ª—É—á–µ–Ω: {promo_rank}")
                            else:
                                send_vk_message(vk_session, user_id, "üö´ | –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥. –í–∞—à —Ä–∞–Ω–≥ –≤—ã—à–µ –≤—ã–¥–∞–≤–∞–µ–º–æ–≥–æ.")

                        elif promo_type == '–ø—Ä–∏–≤–∏–ª–µ–≥–∏—è':
                            if not server_name:
                                send_vk_message(vk_session, user_id, "üö´ | –£–∫–∞–∂–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –≤ –∫–æ–Ω—Ü–µ.")
                                continue

                            if server_name not in config['servers']:
                                send_vk_message(vk_session, user_id, f"üö´ | –°–µ—Ä–≤–µ—Ä '{server_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                                continue

                            rcon_response = rcon_command(f"setgroup {selected_account} {promo_group}", server_name)
                            if rcon_response:
                                send_vk_message(vk_session, user_id, f"üì¶ | –ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ –∞–∫–∫–µ {selected_account}!\nüåü | –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–º–æ: {promo_desc.replace('_', ' ')}\n{rcon_response.replace('[PurePerms] ', 'üëë | ')}")
                            else:
                                send_vk_message(vk_session, user_id, "üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.\n{rcon_response.replace('[PurePerms ]', 'üëë | ')}")

                        elif promo_type == '–¥–µ–Ω—å–≥–∏':
                            if not server_name:
                                send_vk_message(vk_session, user_id, "üö´ | –£–∫–∞–∂–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –¥–µ–Ω–µ–≥ –≤ –∫–æ–Ω—Ü–µ.")
                                continue

                            if server_name not in config['servers']:
                                send_vk_message(vk_session, user_id, f"üö´ | –°–µ—Ä–≤–µ—Ä '{server_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                                continue

                            rcon_response = rcon_command(f"givemoney {selected_account} {promo_money}", server_name)

                            if rcon_response:
                                send_vk_message(vk_session, user_id, f"üì¶ | –ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ –∞–∫–∫–µ {selected_account}!\nüåü | –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–º–æ: {promo_desc.replace('_', ' ')}\n{rcon_response.replace('(–≠–∫–æ–Ω–æ–º–∏–∫–∞) –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ ', 'üíµ | –£—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–æ ')}")
                            else:
                                send_vk_message(vk_session, user_id, "üö´ | –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –¥–µ–Ω–µ–≥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.\n{rcon_response.replace('(–≠–∫–æ–Ω–æ–º–∏–∫–∞) ', 'üíµ | ')}")

                        promo_cursor.execute("UPDATE promo SET promo_count = promo_count - 1 WHERE promo_name = %s", (promo_code,))
                        promo_cursor.execute("INSERT INTO used_promo (promo_name, nickname) VALUES (%s, %s)", (promo_code, selected_account))
                        promo_conn.commit()

                    else:
                        send_vk_message(vk_session, user_id, "üö´ | –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /–ø—Ä–æ–º–æ —Å–ø–∏—Å–æ–∫|–∞–∫—Ç–∏–≤–∞—Ü–∏—è|—Å–æ–∑–¥–∞—Ç—å.\n –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /–ø—Ä–æ–º–æ —Å–æ–∑–¥–∞—Ç—å [–¥–æ—Å—Ç—É–ø/–ø—Ä–∏–≤–∏–ª–µ–≥–∏—è] [—Ä–∞–Ω–≥/–ø—Ä–∏–≤–∏–ª–µ–≥–∏—è] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π] [–æ–ø–∏—Å–∞–Ω–∏–µ]")
  #              else:
  #                  send_vk_message(user_id, message_id, "üö´ | –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–ø–æ–º–æ—â—å" –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")
  
  #==================================#
  #                                  #
  #   –ü—Ä–∏ —Ñ–∞—Ç–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–∏ –ø—ã—Ç–∞–µ—Ç—Å—è  #   # –≤–æ—Å–∫—Ä–µ—Å–∏—Ç—å –±–æ—Ç–∞                  #
  #                                  #
  #==================================#
  
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π: {e}")
        traceback.print_exc()
        time.sleep(5)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã—Ö –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–≤

if __name__ == '__main__':
    attempt = 0
    max_attempts = 100

    while attempt < max_attempts:
        try:
            run_bot()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
            traceback.print_exc()
            attempt += 1
            time.sleep(6)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π

    print("–ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")